
-- testing free var shadowing in open codegen

-- foo : ℕ → Σ(fst: ℕ → ℕ, snd : ℕ → ℕ) = ~<λ x.
--   ~(let y = x;
--     let f = ~<λ x. y>;
--     let g = ~<λ x. x>;
--     <f, g>)>;

id {A}(x : A) = x;

foo = ~<λ (x : ℕ). ~(let y = x; let f = ~(id <λ z. y>); <f x>)>;

-- foo = ~(id <10>);

return $ foo 100


-- addcode : □ (ℕ → ℕ → ℕ) = <
--   λ x y. ℕElim suc x y>;

-- add = ~addcode;

-- nfadd : ℕ → ℕ → ℕ = ~<λ x y. ~(let y = add x y; <y>)>;

-- return $ nfadd 100 100
